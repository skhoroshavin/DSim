
allocators
    allocator [OK]
    system_allocator
    buddy_allocator
    pool_allocator
    stack_allocator
    generic_allocator

containers
    array [OK]
    hash [WIP]
    list
    btree
    range_list

tables
    table_logger
    table_processor [?]
    table_schema [?]
    table_fixed_column [WIP]
    table_var_column
    table [WIP]
    hash_table : table [WIP]
    bps_table : table
    partition_table : table, table_processor
    processed_table : table, table_processor
    hash_index : table_processor
    btree_index : table_processor

tasks

-----------------------------------------------------------------------------

Table cases:
1) frequent allocation/deallocation of single objects, updated every frame, order not important
	insert by one id to end of list (index = insert( id ), data[index] = initial)
	update all objects per frame, order independent (update( data() ))
	remove by one id swapping with end of list (remove( id ))

2) rare allocation/deallocation of continuous ranges of ids, preferably saving ordering
	insert by id range to end of list (index = insert( id, count ), init( data+index, data+index+count) )
	remove by id range preserving order (remove( id, count ))



-----------------------------------------------------------------------------

Table log events:
    INSERT FAST/ORDERED block, start_id, count
    REMOVE FAST/ORDERED block, index, count
    UPDATE block, index, count, column

Table interface:
    // Reflection
    column_count()
    column_size( col )
    block_count()
    block_size( block )

    // Access
    insert( start_id, count )
    remove( start_id, count )
    id_data( block )
    data( block, col )
    find( id, count, hint )

