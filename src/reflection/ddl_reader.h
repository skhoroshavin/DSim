#ifndef DDL_READER_H
#define DDL_READER_H

/* Generated by flatcc 0.4.1-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef alignas
#include <stdalign.h>
#endif
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct dsim_ddl_numeric_type_table *dsim_ddl_numeric_type_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_numeric_type_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_numeric_type_mutable_vec_t;
typedef const struct dsim_ddl_struct_field_table *dsim_ddl_struct_field_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_struct_field_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_struct_field_mutable_vec_t;
typedef const struct dsim_ddl_struct_type_table *dsim_ddl_struct_type_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_struct_type_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_struct_type_mutable_vec_t;
typedef const struct dsim_ddl_enum_type_table *dsim_ddl_enum_type_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_enum_type_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_enum_type_mutable_vec_t;
typedef const struct dsim_ddl_reference_type_table *dsim_ddl_reference_type_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_reference_type_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_reference_type_mutable_vec_t;
typedef const struct dsim_ddl_type_table *dsim_ddl_type_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_type_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_type_mutable_vec_t;
typedef const struct dsim_ddl_array_table *dsim_ddl_array_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_array_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_array_mutable_vec_t;
typedef const struct dsim_ddl_layout_table *dsim_ddl_layout_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_layout_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_layout_mutable_vec_t;
typedef const struct dsim_ddl_hash_storage_table *dsim_ddl_hash_storage_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_hash_storage_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_hash_storage_mutable_vec_t;
typedef const struct dsim_ddl_storage_table *dsim_ddl_storage_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_storage_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_storage_mutable_vec_t;
typedef const struct dsim_ddl_root_table *dsim_ddl_root_table_t;
typedef const flatbuffers_uoffset_t *dsim_ddl_root_vec_t;
typedef flatbuffers_uoffset_t *dsim_ddl_root_mutable_vec_t;



/** //////////////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////////////// */
struct dsim_ddl_numeric_type_table { uint8_t unused__; };

#ifndef dsim_ddl_numeric_type_identifier
#define dsim_ddl_numeric_type_identifier flatbuffers_identifier
#endif
#define dsim_ddl_numeric_type_type_hash ((flatbuffers_thash_t)0x75650eee)
#define dsim_ddl_numeric_type_type_identifier "\xee\x0e\x65\x75"
static inline size_t dsim_ddl_numeric_type_vec_len(dsim_ddl_numeric_type_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_numeric_type_table_t dsim_ddl_numeric_type_vec_at(dsim_ddl_numeric_type_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_numeric_type_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_numeric_type)

static inline flatbuffers_bool_t dsim_ddl_numeric_type_is_signed(dsim_ddl_numeric_type_table_t t)
__flatbuffers_scalar_field(flatbuffers_bool, 0, 0, t)
static inline int dsim_ddl_numeric_type_is_signed_is_present(dsim_ddl_numeric_type_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_bool_t dsim_ddl_numeric_type_is_float(dsim_ddl_numeric_type_table_t t)
__flatbuffers_scalar_field(flatbuffers_bool, 1, 0, t)
static inline int dsim_ddl_numeric_type_is_float_is_present(dsim_ddl_numeric_type_table_t t)
__flatbuffers_field_present(1, t)


struct dsim_ddl_struct_field_table { uint8_t unused__; };

#ifndef dsim_ddl_struct_field_identifier
#define dsim_ddl_struct_field_identifier flatbuffers_identifier
#endif
#define dsim_ddl_struct_field_type_hash ((flatbuffers_thash_t)0xbeb0cf0c)
#define dsim_ddl_struct_field_type_identifier "\x0c\xcf\xb0\xbe"
static inline size_t dsim_ddl_struct_field_vec_len(dsim_ddl_struct_field_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_struct_field_table_t dsim_ddl_struct_field_vec_at(dsim_ddl_struct_field_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_struct_field_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_struct_field)

static inline flatbuffers_string_t dsim_ddl_struct_field_name(dsim_ddl_struct_field_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
__flatbuffers_define_find_by_string_field(dsim_ddl_struct_field, name)
__flatbuffers_define_scan_by_string_field(dsim_ddl_struct_field, name)
__flatbuffers_define_sort_by_string_field(dsim_ddl_struct_field, name)
__flatbuffers_define_default_find_by_string_field(dsim_ddl_struct_field, name)
__flatbuffers_define_default_scan_by_string_field(dsim_ddl_struct_field, name)
#define dsim_ddl_struct_field_vec_sort dsim_ddl_struct_field_vec_sort_by_name
static inline int dsim_ddl_struct_field_name_is_present(dsim_ddl_struct_field_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t dsim_ddl_struct_field_type(dsim_ddl_struct_field_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int dsim_ddl_struct_field_type_is_present(dsim_ddl_struct_field_table_t t)
__flatbuffers_field_present(1, t)

static inline uint32_t dsim_ddl_struct_field_offset(dsim_ddl_struct_field_table_t t)
__flatbuffers_scalar_field(flatbuffers_uint32, 2, 0, t)
static inline int dsim_ddl_struct_field_offset_is_present(dsim_ddl_struct_field_table_t t)
__flatbuffers_field_present(2, t)


struct dsim_ddl_struct_type_table { uint8_t unused__; };

#ifndef dsim_ddl_struct_type_identifier
#define dsim_ddl_struct_type_identifier flatbuffers_identifier
#endif
#define dsim_ddl_struct_type_type_hash ((flatbuffers_thash_t)0xcc855668)
#define dsim_ddl_struct_type_type_identifier "\x68\x56\x85\xcc"
static inline size_t dsim_ddl_struct_type_vec_len(dsim_ddl_struct_type_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_struct_type_table_t dsim_ddl_struct_type_vec_at(dsim_ddl_struct_type_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_struct_type_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_struct_type)

static inline dsim_ddl_struct_field_vec_t dsim_ddl_struct_type_fields(dsim_ddl_struct_type_table_t t)
__flatbuffers_vector_field(dsim_ddl_struct_field_vec_t, 0, t, 0)
static inline int dsim_ddl_struct_type_fields_is_present(dsim_ddl_struct_type_table_t t)
__flatbuffers_field_present(0, t)


struct dsim_ddl_enum_type_table { uint8_t unused__; };

#ifndef dsim_ddl_enum_type_identifier
#define dsim_ddl_enum_type_identifier flatbuffers_identifier
#endif
#define dsim_ddl_enum_type_type_hash ((flatbuffers_thash_t)0x303f2354)
#define dsim_ddl_enum_type_type_identifier "\x54\x23\x3f\x30"
static inline size_t dsim_ddl_enum_type_vec_len(dsim_ddl_enum_type_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_enum_type_table_t dsim_ddl_enum_type_vec_at(dsim_ddl_enum_type_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_enum_type_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_enum_type)

static inline flatbuffers_string_vec_t dsim_ddl_enum_type_values(dsim_ddl_enum_type_table_t t)
__flatbuffers_vector_field(flatbuffers_string_vec_t, 0, t, 0)
static inline int dsim_ddl_enum_type_values_is_present(dsim_ddl_enum_type_table_t t)
__flatbuffers_field_present(0, t)


struct dsim_ddl_reference_type_table { uint8_t unused__; };

#ifndef dsim_ddl_reference_type_identifier
#define dsim_ddl_reference_type_identifier flatbuffers_identifier
#endif
#define dsim_ddl_reference_type_type_hash ((flatbuffers_thash_t)0xa9dce238)
#define dsim_ddl_reference_type_type_identifier "\x38\xe2\xdc\xa9"
static inline size_t dsim_ddl_reference_type_vec_len(dsim_ddl_reference_type_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_reference_type_table_t dsim_ddl_reference_type_vec_at(dsim_ddl_reference_type_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_reference_type_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_reference_type)

static inline flatbuffers_string_vec_t dsim_ddl_reference_type_storages(dsim_ddl_reference_type_table_t t)
__flatbuffers_vector_field(flatbuffers_string_vec_t, 0, t, 0)
static inline int dsim_ddl_reference_type_storages_is_present(dsim_ddl_reference_type_table_t t)
__flatbuffers_field_present(0, t)

typedef uint8_t dsim_ddl_any_type_union_type_t;
__flatbuffers_define_integer_type(dsim_ddl_any_type, dsim_ddl_any_type_union_type_t, 8)
#define dsim_ddl_any_type_NONE ((dsim_ddl_any_type_union_type_t)0U)
#define dsim_ddl_any_type_numeric_type ((dsim_ddl_any_type_union_type_t)1U)
#define dsim_ddl_any_type_struct_type ((dsim_ddl_any_type_union_type_t)2U)
#define dsim_ddl_any_type_enum_type ((dsim_ddl_any_type_union_type_t)3U)
#define dsim_ddl_any_type_reference_type ((dsim_ddl_any_type_union_type_t)4U)

static inline const char *dsim_ddl_any_type_type_name(dsim_ddl_any_type_union_type_t type)
{
    switch (type) {
    case dsim_ddl_any_type_NONE: return "NONE";
    case dsim_ddl_any_type_numeric_type: return "numeric_type";
    case dsim_ddl_any_type_struct_type: return "struct_type";
    case dsim_ddl_any_type_enum_type: return "enum_type";
    case dsim_ddl_any_type_reference_type: return "reference_type";
    default: return "";
    }
}


struct dsim_ddl_type_table { uint8_t unused__; };

#ifndef dsim_ddl_type_identifier
#define dsim_ddl_type_identifier flatbuffers_identifier
#endif
#define dsim_ddl_type_type_hash ((flatbuffers_thash_t)0xb77bd7fa)
#define dsim_ddl_type_type_identifier "\xfa\xd7\x7b\xb7"
static inline size_t dsim_ddl_type_vec_len(dsim_ddl_type_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_type_table_t dsim_ddl_type_vec_at(dsim_ddl_type_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_type_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_type)

static inline flatbuffers_string_t dsim_ddl_type_name(dsim_ddl_type_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
__flatbuffers_define_find_by_string_field(dsim_ddl_type, name)
__flatbuffers_define_scan_by_string_field(dsim_ddl_type, name)
__flatbuffers_define_sort_by_string_field(dsim_ddl_type, name)
__flatbuffers_define_default_find_by_string_field(dsim_ddl_type, name)
__flatbuffers_define_default_scan_by_string_field(dsim_ddl_type, name)
#define dsim_ddl_type_vec_sort dsim_ddl_type_vec_sort_by_name
static inline int dsim_ddl_type_name_is_present(dsim_ddl_type_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t dsim_ddl_type_ctype(dsim_ddl_type_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int dsim_ddl_type_ctype_is_present(dsim_ddl_type_table_t t)
__flatbuffers_field_present(1, t)

static inline uint8_t dsim_ddl_type_size(dsim_ddl_type_table_t t)
__flatbuffers_scalar_field(flatbuffers_uint8, 2, 0, t)
static inline int dsim_ddl_type_size_is_present(dsim_ddl_type_table_t t)
__flatbuffers_field_present(2, t)

static inline uint8_t dsim_ddl_type_align(dsim_ddl_type_table_t t)
__flatbuffers_scalar_field(flatbuffers_uint8, 3, 0, t)
static inline int dsim_ddl_type_align_is_present(dsim_ddl_type_table_t t)
__flatbuffers_field_present(3, t)

static inline dsim_ddl_any_type_union_type_t dsim_ddl_type_data_type(dsim_ddl_type_table_t t)
__flatbuffers_scalar_field(dsim_ddl_any_type, 4, 0, t)
static inline flatbuffers_generic_table_t dsim_ddl_type_data(dsim_ddl_type_table_t t)
__flatbuffers_table_field(flatbuffers_generic_table_t, 5, t, 0)
static inline int dsim_ddl_type_data_is_present(dsim_ddl_type_table_t t)
__flatbuffers_field_present(4, t)


/** //////////////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////////////// */
struct dsim_ddl_array_table { uint8_t unused__; };

#ifndef dsim_ddl_array_identifier
#define dsim_ddl_array_identifier flatbuffers_identifier
#endif
#define dsim_ddl_array_type_hash ((flatbuffers_thash_t)0x9788e1fb)
#define dsim_ddl_array_type_identifier "\xfb\xe1\x88\x97"
static inline size_t dsim_ddl_array_vec_len(dsim_ddl_array_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_array_table_t dsim_ddl_array_vec_at(dsim_ddl_array_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_array_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_array)

static inline flatbuffers_string_t dsim_ddl_array_name(dsim_ddl_array_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
__flatbuffers_define_find_by_string_field(dsim_ddl_array, name)
__flatbuffers_define_scan_by_string_field(dsim_ddl_array, name)
__flatbuffers_define_sort_by_string_field(dsim_ddl_array, name)
__flatbuffers_define_default_find_by_string_field(dsim_ddl_array, name)
__flatbuffers_define_default_scan_by_string_field(dsim_ddl_array, name)
#define dsim_ddl_array_vec_sort dsim_ddl_array_vec_sort_by_name
static inline int dsim_ddl_array_name_is_present(dsim_ddl_array_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t dsim_ddl_array_type(dsim_ddl_array_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int dsim_ddl_array_type_is_present(dsim_ddl_array_table_t t)
__flatbuffers_field_present(1, t)


struct dsim_ddl_layout_table { uint8_t unused__; };

#ifndef dsim_ddl_layout_identifier
#define dsim_ddl_layout_identifier flatbuffers_identifier
#endif
#define dsim_ddl_layout_type_hash ((flatbuffers_thash_t)0x784c1c04)
#define dsim_ddl_layout_type_identifier "\x04\x1c\x4c\x78"
static inline size_t dsim_ddl_layout_vec_len(dsim_ddl_layout_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_layout_table_t dsim_ddl_layout_vec_at(dsim_ddl_layout_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_layout_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_layout)

static inline flatbuffers_string_t dsim_ddl_layout_name(dsim_ddl_layout_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
__flatbuffers_define_find_by_string_field(dsim_ddl_layout, name)
__flatbuffers_define_scan_by_string_field(dsim_ddl_layout, name)
__flatbuffers_define_sort_by_string_field(dsim_ddl_layout, name)
__flatbuffers_define_default_find_by_string_field(dsim_ddl_layout, name)
__flatbuffers_define_default_scan_by_string_field(dsim_ddl_layout, name)
#define dsim_ddl_layout_vec_sort dsim_ddl_layout_vec_sort_by_name
static inline int dsim_ddl_layout_name_is_present(dsim_ddl_layout_table_t t)
__flatbuffers_field_present(0, t)

static inline dsim_ddl_array_vec_t dsim_ddl_layout_arrays(dsim_ddl_layout_table_t t)
__flatbuffers_vector_field(dsim_ddl_array_vec_t, 1, t, 0)
static inline int dsim_ddl_layout_arrays_is_present(dsim_ddl_layout_table_t t)
__flatbuffers_field_present(1, t)

/** //////////////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////////////// */
typedef uint8_t dsim_ddl_storage_engine_union_type_t;
__flatbuffers_define_integer_type(dsim_ddl_storage_engine, dsim_ddl_storage_engine_union_type_t, 8)
#define dsim_ddl_storage_engine_NONE ((dsim_ddl_storage_engine_union_type_t)0U)
#define dsim_ddl_storage_engine_hash_storage ((dsim_ddl_storage_engine_union_type_t)1U)

static inline const char *dsim_ddl_storage_engine_type_name(dsim_ddl_storage_engine_union_type_t type)
{
    switch (type) {
    case dsim_ddl_storage_engine_NONE: return "NONE";
    case dsim_ddl_storage_engine_hash_storage: return "hash_storage";
    default: return "";
    }
}


struct dsim_ddl_hash_storage_table { uint8_t unused__; };

#ifndef dsim_ddl_hash_storage_identifier
#define dsim_ddl_hash_storage_identifier flatbuffers_identifier
#endif
#define dsim_ddl_hash_storage_type_hash ((flatbuffers_thash_t)0x9f500bd0)
#define dsim_ddl_hash_storage_type_identifier "\xd0\x0b\x50\x9f"
static inline size_t dsim_ddl_hash_storage_vec_len(dsim_ddl_hash_storage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_hash_storage_table_t dsim_ddl_hash_storage_vec_at(dsim_ddl_hash_storage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_hash_storage_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_hash_storage)


struct dsim_ddl_storage_table { uint8_t unused__; };

#ifndef dsim_ddl_storage_identifier
#define dsim_ddl_storage_identifier flatbuffers_identifier
#endif
#define dsim_ddl_storage_type_hash ((flatbuffers_thash_t)0x65cb8f5f)
#define dsim_ddl_storage_type_identifier "\x5f\x8f\xcb\x65"
static inline size_t dsim_ddl_storage_vec_len(dsim_ddl_storage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_storage_table_t dsim_ddl_storage_vec_at(dsim_ddl_storage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_storage_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_storage)

static inline flatbuffers_string_t dsim_ddl_storage_name(dsim_ddl_storage_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
__flatbuffers_define_find_by_string_field(dsim_ddl_storage, name)
__flatbuffers_define_scan_by_string_field(dsim_ddl_storage, name)
__flatbuffers_define_sort_by_string_field(dsim_ddl_storage, name)
__flatbuffers_define_default_find_by_string_field(dsim_ddl_storage, name)
__flatbuffers_define_default_scan_by_string_field(dsim_ddl_storage, name)
#define dsim_ddl_storage_vec_sort dsim_ddl_storage_vec_sort_by_name
static inline int dsim_ddl_storage_name_is_present(dsim_ddl_storage_table_t t)
__flatbuffers_field_present(0, t)

static inline flatbuffers_string_t dsim_ddl_storage_layout(dsim_ddl_storage_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 1, t, 0)
static inline int dsim_ddl_storage_layout_is_present(dsim_ddl_storage_table_t t)
__flatbuffers_field_present(1, t)

static inline flatbuffers_string_t dsim_ddl_storage_ref_type(dsim_ddl_storage_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 2, t, 0)
static inline int dsim_ddl_storage_ref_type_is_present(dsim_ddl_storage_table_t t)
__flatbuffers_field_present(2, t)

static inline dsim_ddl_storage_engine_union_type_t dsim_ddl_storage_engine_type(dsim_ddl_storage_table_t t)
__flatbuffers_scalar_field(dsim_ddl_storage_engine, 3, 0, t)
static inline flatbuffers_generic_table_t dsim_ddl_storage_engine(dsim_ddl_storage_table_t t)
__flatbuffers_table_field(flatbuffers_generic_table_t, 4, t, 0)
static inline int dsim_ddl_storage_engine_is_present(dsim_ddl_storage_table_t t)
__flatbuffers_field_present(3, t)


/** //////////////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////////////// */
struct dsim_ddl_root_table { uint8_t unused__; };

#ifndef dsim_ddl_root_identifier
#define dsim_ddl_root_identifier flatbuffers_identifier
#endif
#define dsim_ddl_root_type_hash ((flatbuffers_thash_t)0x991c18e)
#define dsim_ddl_root_type_identifier "\x8e\xc1\x91\x09"
static inline size_t dsim_ddl_root_vec_len(dsim_ddl_root_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dsim_ddl_root_table_t dsim_ddl_root_vec_at(dsim_ddl_root_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dsim_ddl_root_table_t, vec, i, 0)
__flatbuffers_table_as_root(dsim_ddl_root)

static inline flatbuffers_string_t dsim_ddl_root_name(dsim_ddl_root_table_t t)
__flatbuffers_vector_field(flatbuffers_string_t, 0, t, 0)
static inline int dsim_ddl_root_name_is_present(dsim_ddl_root_table_t t)
__flatbuffers_field_present(0, t)

static inline dsim_ddl_type_vec_t dsim_ddl_root_types(dsim_ddl_root_table_t t)
__flatbuffers_vector_field(dsim_ddl_type_vec_t, 1, t, 0)
static inline int dsim_ddl_root_types_is_present(dsim_ddl_root_table_t t)
__flatbuffers_field_present(1, t)

static inline dsim_ddl_layout_vec_t dsim_ddl_root_layouts(dsim_ddl_root_table_t t)
__flatbuffers_vector_field(dsim_ddl_layout_vec_t, 2, t, 0)
static inline int dsim_ddl_root_layouts_is_present(dsim_ddl_root_table_t t)
__flatbuffers_field_present(2, t)

static inline dsim_ddl_storage_vec_t dsim_ddl_root_storages(dsim_ddl_root_table_t t)
__flatbuffers_vector_field(dsim_ddl_storage_vec_t, 3, t, 0)
static inline int dsim_ddl_root_storages_is_present(dsim_ddl_root_table_t t)
__flatbuffers_field_present(3, t)


#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* DDL_READER_H */
